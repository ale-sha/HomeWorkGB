<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>Diff</key>
	<array>
		<dict>
			<key>ModifiedContent</key>
			<string>import Foundation

enum act: String {
    case open = "открыта"
    case close = "закрыта"
}

class Paper {
    let name: String
    var percent: Int
    var state: act
    
    func description() {
        print("\"\(name)\" сейчас \(state.rawValue). Прочитано \(percent) процентов.")
    }
    
    init(name: String, percent: Int, state: act) {
        self.name = name
        self.percent = percent
        self.state = state
    }
}

enum actionBook: String {
    case read = "читать"
    case prop = "подпирать"
    case copy = "копировать"
}

class Book: Paper {
    let data: Int
    let autor: String
    let genre: String
    let weight: Int
    var action: actionBook
    
    init(name: String, data: Int, percent: Int, state: act, autor: String, genre: String, weight: Int, action: actionBook) {
        self.data = data
        self.autor = autor
        self.genre = genre
        self.weight = weight
        self.action = action
    
    super.init(name: name, percent: percent, state: state)
    }
    
    func actionBook() {
        if state.rawValue == act.open.rawValue {
            print("Самое время начать \(Page_Contents.actionBook.read.rawValue). ")
        }
    }
    
    func copyBook() {
        action = .copy
        print("Для копирования материала из этой книги требуется разрешение автора в письменном виде.")
    }
    
    override func description() {
        super.description()
        print("Это произведение, жанр которого \(genre), написал \(autor) в \(data) году.")
    }
}

var book1 = Book(name: "Русалочка", data: 1837, percent: 45, state: .close, autor: "Андерсен", genre: "сказка", weight: 20, action: .read)
book1.description()
book1.actionBook()
book1.copyBook()

var book2 = Book(name: "Фотограмметрия", data: 2004, percent: 89, state: .open, autor: "Лобанов", genre: "учебник", weight: 205, action: .copy)
book2.description()
book2.actionBook()

enum actionMag: String {
    case roll = "бить мух"
    case sheet = "упс, чп"
    case drow = "рисовать"
    case crossword = "разгадывать кроссворд"
}

class magazine: Paper {
    let typeMag: String
    let typePaper: String
    var action: actionMag
    
    init(name: String, percent: Int, state: act, typeMag: String, typePaper: String, action: actionMag) {
        self.typeMag = typeMag
        self.typePaper = typePaper
        self.action = action
        
        super.init(name: name, percent: percent, state: state)
    }
    
    override func description() {
        super.description()
        print("Это \(typeMag) журнал. Он отлично подойдёт, чтобы \(action.rawValue).")
    }
}
var magazine1 = magazine(name: "Мурзилка", percent: 4, state: .open, typeMag: "развлекательный", typePaper: "тонкие", action: .drow)

magazine1.description()

var magazine2 = magazine(name: "StarHit", percent: 0, state: .close, typeMag: "жёлтостраничный", typePaper: "плотные", action: .roll)
magazine2.description()
</string>
			<key>ModifiedRange</key>
			<string>{1, 2920}</string>
			<key>OriginalContent</key>
			<string></string>
			<key>OriginalRange</key>
			<string>{1, 0}</string>
		</dict>
	</array>
	<key>File</key>
	<string>Chapters/Chapter1.playgroundchapter/Pages/My Playground.playgroundpage/main.swift</string>
</dict>
</plist>
