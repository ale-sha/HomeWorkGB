<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>Diff</key>
	<array>
		<dict>
			<key>ModifiedContent</key>
			<string>import Foundation

enum act: String {
    case open = "открыта"
    case close = "закрыта"
}

struct kidsBook {
    let name: String
    let autor: String
    var read: Int
    var state: act
    
    mutating func stateBook(action: act) {
        switch action {
        case .open:
            self.state = .open
            print(action.rawValue)
        case .close:
            self.state = .close
            print(action.rawValue)
        }
    }  
    
    func description() {
        print("\(name) написал \(autor). Прочитано \(read) процентов. Книга сейчас \(state.rawValue).")
    }
    
    init (nameBook: String, autorBook: String, readProz: Int, stateBook: act) {
        self.name = nameBook
        self.autor = autorBook
        self.read = readProz
        //self.weight = weightBook
        self.state = stateBook
    }
}

let book1 = kidsBook(nameBook: "\"Русалочка\"", autorBook: "Андерсен", readProz: 36, stateBook: .open)
print(book1)

book1.description()

enum actSci: String {
    case open = "открыта"
    case close = "закрыта"
    case stand = "подпорка"
}

struct scientific {
    let name: String
    let autor: String
    var read: Int
    let weight: Double
    var state: actSci
    
    mutating func stateBook(action: actSci) {
        switch action {
        case .open:
            self.state = .open
            print(action.rawValue)
        case .close:
            self.state = .close
            print(action.rawValue)
        case .stand:
            self.state = .stand
            print(action.rawValue)
        }
    }  
    
    func description() {
        var a = "\(name) написал \(autor). Прочитано \(read) процентов. Книга сейчас \(state.rawValue)."
        if weight &gt;= 200 {
            a = a + " Из вашей книги получится отличная подпорка!"
        } else if state.rawValue == actSci.stand.rawValue {
            a = a + " Надо взять книгу потяжелее."
        } 
        print(a)
    }
    
    init (nameBook: String, autorBook: String, readProz: Int, stateBook: actSci, weightBook: Double) {
        self.name = nameBook
        self.autor = autorBook
        self.read = readProz
        self.weight = weightBook
        self.state = stateBook
    }
}

let book2 = scientific(nameBook: "\"Фотограмметрия\"", autorBook: "Лобанов А.Н.", readProz: 67, stateBook: .close, weightBook: 201)
print(book2)

book2.description()
</string>
			<key>ModifiedRange</key>
			<string>{1, 2380}</string>
			<key>OriginalContent</key>
			<string></string>
			<key>OriginalRange</key>
			<string>{1, 0}</string>
		</dict>
	</array>
	<key>File</key>
	<string>Chapters/Chapter1.playgroundchapter/Pages/My Playground.playgroundpage/main.swift</string>
</dict>
</plist>
